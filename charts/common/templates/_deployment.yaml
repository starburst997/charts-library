{{/*
Standard Kubernetes Deployment
Usage: {{ include "common.deployment" . }}
*/}}
{{- define "common.deployment" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        reloader.stakater.com/search: "true"  # Auto-reload on ConfigMap/Secret changes
      labels:
        app: {{ .Chart.Name }}
    spec:
      {{- if or .Values.image.pullSecrets .Values.imagePullSecret.create }}
      imagePullSecrets:
        {{- if .Values.imagePullSecret.create }}
        - name: {{ .Values.imagePullSecret.name }}
        {{- end }}
        {{- with .Values.image.pullSecrets }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      containers:
        - name: app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.targetPort }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $value := .Values.secrets }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Chart.Name }}
                  key: {{ $key }}
            {{- end }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- if ne ((.Values.healthCheck).enabled | default true) false }}
          {{- $healthPath := (.Values.healthCheck).path | default "/" }}
          {{- $healthPort := (.Values.healthCheck).port | default .Values.service.targetPort }}
          {{- $readinessDelay := (.Values.healthCheck).readinessInitialDelay | default 5 }}
          {{- $livenessDelay := (.Values.healthCheck).livenessInitialDelay | default 15 }}
          {{- $periodSeconds := (.Values.healthCheck).periodSeconds | default 5 }}
          {{- $timeoutSeconds := (.Values.healthCheck).timeoutSeconds | default 3 }}
          {{- $successThreshold := (.Values.healthCheck).successThreshold | default 1 }}
          {{- $failureThreshold := (.Values.healthCheck).failureThreshold | default 3 }}
          {{- $readinessSuccessThreshold := (.Values.healthCheck).readinessSuccessThreshold | default $successThreshold }}
          {{- $readinessFailureThreshold := (.Values.healthCheck).readinessFailureThreshold | default $failureThreshold }}
          {{- $livenessFailureThreshold := (.Values.healthCheck).livenessFailureThreshold | default $failureThreshold }}
          {{- if .Values.readinessProbe }}
          readinessProbe: {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- else }}
          readinessProbe:
            httpGet:
              path: {{ $healthPath }}
              port: {{ $healthPort }}
            initialDelaySeconds: {{ $readinessDelay }}
            periodSeconds: {{ $periodSeconds }}
            timeoutSeconds: {{ $timeoutSeconds }}
            successThreshold: {{ $readinessSuccessThreshold }}
            failureThreshold: {{ $readinessFailureThreshold }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe: {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- else }}
          livenessProbe:
            httpGet:
              path: {{ $healthPath }}
              port: {{ $healthPort }}
            initialDelaySeconds: {{ $livenessDelay }}
            periodSeconds: {{ mul $periodSeconds 2 }}
            timeoutSeconds: {{ $timeoutSeconds }}
            failureThreshold: {{ $livenessFailureThreshold }}
          {{- end }}
          {{- end }}
{{- end -}}
