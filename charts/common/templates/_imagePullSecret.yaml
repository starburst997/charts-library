{{/*
External Secrets integration for Docker registry authentication
Usage: {{ include "common.imagePullSecret.standalone" . }}
*/}}
{{- define "common.imagePullSecret.standalone" -}}
{{- include "common.withMergedValues" (dict "templateName" "common.imagePullSecret" "context" .) -}}
{{- end -}}

{{- define "common.imagePullSecret" -}}
{{- if .Values.imagePullSecret.create }}
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-10"
  name: {{ .Values.imagePullSecret.name }}
  namespace: {{ .Values.namespace }}
spec:
  refreshInterval: {{ .Values.imagePullSecret.refreshInterval | quote }}
  secretStoreRef:
    name: {{ .Values.secretStore.name }}
    kind: {{ .Values.secretStore.kind }}
  target:
    name: {{ .Values.imagePullSecret.name }}
    creationPolicy: Owner
    template:
      type: kubernetes.io/dockerconfigjson
      data:
        .dockerconfigjson: |
          {
            "auths": {
              "{{ .Values.imagePullSecret.registry }}": {
                "username": "{{ `{{ .username }}` }}",
                "password": "{{ `{{ .token }}` }}"
              }
            }
          }
  data:
    - secretKey: username
      remoteRef:
        {{- if contains "/" .Values.imagePullSecret.usernameKey }}
        {{- $parts := splitList "/" .Values.imagePullSecret.usernameKey }}
        key: {{ index $parts 0 }}
        property: {{ index $parts 1 }}
        {{- else }}
        key: {{ .Values.imagePullSecret.usernameKey }}
        {{- end }}
    - secretKey: token
      remoteRef:
        {{- if contains "/" .Values.imagePullSecret.tokenKey }}
        {{- $parts := splitList "/" .Values.imagePullSecret.tokenKey }}
        key: {{ index $parts 0 }}
        property: {{ index $parts 1 }}
        {{- else }}
        key: {{ .Values.imagePullSecret.tokenKey }}
        {{- end }}
{{- end }}
{{- end -}}
