{{/*
External Secrets integration for application secrets
Usage: {{ include "common.externalSecret.standalone" .Subcharts.common }}
*/}}
{{- define "common.externalSecret.standalone" -}}
{{- include "common.withMergedValues" (dict "templateName" "common.externalSecret" "context" .) -}}
{{- end -}}

{{- define "common.externalSecret" -}}
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-5"
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
spec:
  refreshInterval: "6h"
  secretStoreRef:
    name: {{ .Values.secretStore.name }}
    kind: {{ .Values.secretStore.kind }}
  target:
    name: {{ .Chart.Name }}
    creationPolicy: Owner
  data:
    {{- range $key, $value := .Values.secrets }}
    - secretKey: {{ $key }}
      remoteRef:
        {{- if contains "/" $value }}
        {{- $parts := splitList "/" $value }}
        key: {{ index $parts 0 }}
        property: {{ index $parts 1 }}
        {{- else }}
        key: {{ $value }}
        {{- end }}
    {{- end }}
{{- end -}}
